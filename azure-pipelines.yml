trigger:
- master   

pool:
  name: Default  

variables:
  PYTHON_VERSION: '3.10'

stages:

# ========================
# 1) CI : Build & Package
# ========================
- stage: Build
  displayName: "Build and Package"
  jobs:
  - job: Build
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python $(PYTHON_VERSION)'
      inputs:
        versionSpec: '$(PYTHON_VERSION)'
        addToPath: true

    - script: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt --target=".python_packages/lib/site-packages"
      displayName: 'Install dependencies → .python_packages/'

    - task: CopyFiles@2
      displayName: 'Stage files for package'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
          host.json
          local.settings.json
          requirements.txt
          shared.py
          **/*.py
          .python_packages/**/*
          !.git/**/*
          !.vscode/**/*
          !**/__pycache__/**/*
          !**/*.pyc
          !**/.venv/**/*
        TargetFolder: '$(Build.ArtifactStagingDirectory)/package'

    - task: ArchiveFiles@2
      displayName: 'Zip package'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/package'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/functionapp.zip'
        replaceExistingArchive: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop
# ========================
# 2) CD : Deploy to Azure (Publish Profile)
# ========================
# après: - download: current  artifact: drop
    - task: PowerShell@2
      displayName: 'Kudu ZIP Deploy (Publish Profile, no Service Connection)'
      inputs:
        targetType: 'inline'
        pwsh: true
        script: |
          $ErrorActionPreference = "Stop"

          if (-not "$(AZURE_FUNCTIONAPP_PUBLISH_PROFILE)") {
            throw "Missing secret variable AZURE_FUNCTIONAPP_PUBLISH_PROFILE"
          }

          $xml = [xml]"$(AZURE_FUNCTIONAPP_PUBLISH_PROFILE)"
          $pub = $xml.publishData.publishProfile | Where-Object { $_.publishMethod -eq "ZipDeploy" } | Select-Object -First 1
          if (-not $pub) { throw "No ZipDeploy profile found in publish profile." }

          $zip = "$(Pipeline.Workspace)/drop/functionapp.zip"
          if (-not (Test-Path $zip)) { throw "ZIP not found: $zip" }

          $pair = "$($pub.userName):$($pub.userPWD)"
          $b64  = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes($pair))
          $hdrs = @{ Authorization = "Basic $b64" }
          $scm  = "https://$($pub.publishUrl)/api/zipdeploy"

          Write-Host "POST $scm with $zip"
          $resp = Invoke-WebRequest -Uri $scm -Method Post -InFile $zip -ContentType "application/zip" -Headers $hdrs -UseBasicParsing
          Write-Host "ZipDeploy HTTP: $($resp.StatusCode)"
